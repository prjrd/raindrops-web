%h1 New Job

- if errors
    .errors.alert.alert-error
        %ul
            - errors.each do |field, error_list|
                %li
                    field <b>#{field}</b>:
                    %ul
                        - error_list.each do |error_msg|
                            %li
                                =error_msg

%form.form-horizontal{:action => "/job", :method => "post"}
    .control-group
        %label.control-label{:for=>"inputName"} Name
        .controls
            %input#inputName{:type=>"text", :name=>"name", :placeholder=>job[:name]}

    .control-group
        %label.control-label{:for=>"selectKickstart"} Kickstart
        .controls
            %select#selectKickstart{:name=>"kickstart_id"}
                %option
                - kickstarts.each do |kickstart|
                    %option{:value => kickstart[:id], :selected => (kickstart[:id] == job[:kickstart_id])}
                        = kickstart[:name]
    .control-group
        %label.control-label{:for=>"bgCfg"} Config
        .controls
            #bgCfg.btn-group{:"data-toggle"=>"buttons-radio"}
                %button.btn.active{:type=>"button",:value=>"existing"}
                    Select Config
                %button.btn{:type=>"button",:value=>"new"}
                    Create new Config

    #select-config
        .control-group
            %label.control-label{:for=>"selectCfg"} Existing Config
            .controls
                %select#selectCfg{:name => "cfg_id"}
                    %option
                    - cfgs.each do |cfg|
                        %option{:value => cfg[:id], :selected => (cfg[:id] == job[:cfg_id])}
                            = cfg[:name]

    #new-config
        .control-group
            %label.control-label{:for=>"inputNotifyU"} Notify URL
            .controls
                %input#inputNotifyU{:type=>"text", :name=>"notify_u"}


        .control-group
            %label.control-label{:for=>"inputType"} Type
            .controls
                %select#inputType{:name=>"type"}
                    %option{:value=>"kvm", :selected=>"yes"} KVM
                    %option{:value=>"mock"} Mock

        .control-group
            %label.control-label{:for=>"inputNotifyE"} Notify Email
            .controls
                %input#inputNotifyE{:type=>"text", :name=>"notify_e"}

        .control-group
            %label.control-label{:for=>"inputNotifyT"} Notify Twitter
            .controls
                %input#inputNotifyT{:type=>"text", :name=>"notify_t"}

        %h4#extra-config.offset1 Extra

        .control-group
            %label.control-label{:for=>"inputDiskType"} Disk Type
            .controls
                %select#inputDiskType{:name=>"disk_type"}
                    %option{:value=>"qcow2", :selected=>"yes"} qcow2

        .control-group
            %label.control-label{:for=>"inputDiskSize"} Disk Size (GB)
            .controls
                %input#inputDiskSize{:type=>"text", :name=>"disk_size", :placeholder=>"10"}

        .control-group
            %label.control-label{:for=>"inputDelivery"} Delivery
            .controls
                %select#inputDelivery{:name=>"delivery"}
                    %option{:value=>"pickup", :selected=>"yes"} pickup

        .control-group
            %label.control-label{:for=>"inputCompression"} Compression
            .controls
                %select#inputCompression{:name=>"compression"}
                    %option{:value=>"bzip2", :selected=>"yes"} bzip2

        .control-group
            %label.control-label{:for=>"inputXtraOpts"} Extra Opts
            .controls
                %input#inputXtraOpts{:type=>"text", :name=>"extra", :placeholder=>"noipv6"}



